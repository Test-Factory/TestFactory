@model List<GroupViewModel>
    @using Embedded_Resource
   @if (User.IsInRole("Filler")) { 
    <div id="forCreate">
        <a class="waves-effect waves-light btn-large" href="#" id="addGroup">
            <i id="addIcon" class="large material-icons left">note_add</i>
            <div id="groupAdd">@GlobalRes_ua.createGroup</div>
        </a>
    </div>
    }
    @foreach (var item in Model)
    {
        <div class="group-container">
            <div class="row">
                <div class="col s12 m6">
                    <div class="card blue-grey darken-1 card-action">
                        <div class="card-content white-text">
                            <a class="toDetails" href="@Url.RouteUrl("groupStudentList", new { groupId = item.Id }, null)">
                                <a href="@Url.RouteUrl("studentsResult", new { groupId = item.Id }, null)" style="position: absolute; z-index: 100;">
                                    <i class="material-icons">system_update_alt</i>
                                </a>
                                <p id="textLik">@item.ShortName</p>
                                @{Html.RenderAction("GetStudentCount", "Group", new { id = item.Id });}
                            </a>
                        </div>
                        @if (User.IsInRole("Filler"))
                        { 
                        <div class="card-action updateGroup">
                          <a class="toEdit">@GlobalRes_ua.edit</a>
                        </div>
                        }
                    </div>
                </div>
            </div>
            <div class="updateGroup" id="updateGroup">
                <div id="update">
                    @Html.Partial("Update", item)
                </div>
            </div>
        </div>
    }
    <div id="createGroup">
        <div id="create">
            @Html.Partial("Create", new GroupViewModel())
        </div>
    </div>
    @section Scripts{
        @Scripts.Render("~/Scripts/Index.js")
    }

