@model Tuple<IList<TestFactory.MVC.ViewModels.StudentViewModel>, IList<TestFactory.Business.Models.Category>, IList<TestFactory.Business.Models.Group>>
    <style>
        body {
            overflow: scroll;
        }
    </style>
    @{
        int numberForm = -1;
      }
<div class="search">
    <input  class="form-search" type="search" placeholder="Введіть ім'я студента" id="search" maxlength="100"/>
    <i id="search-clear" class="material-icons">close</i>
</div>
    <div class="search-result-conteiner">
        @foreach (var student in Model.Item1)
        {
            numberForm++;
            <div class="card-search-container" id="@student.Id">
                <div class="card-search">
                    <form method="post" action="/student/update" class="content-search back" style="display: none">
                        @Html.HiddenFor(students=>student.Id)
                        @Html.HiddenFor(students=>student.GroupId)
                        <div class="main-search" style="padding-bottom: 2px;">
                            <div style="display: inline-flex;">
                                @Html.EditorFor(thisStudent => student.FirstName, new { htmlAttributes = new { @class = "search-firstName-input", @maxlength="69"} })
                                @Html.EditorFor(thisStudent => student.LastName, new { htmlAttributes = new { @class = "search-lastName-input", @maxlength="69" } })
                            </div>
                        </div>
                        <div class="marks-container">
                            @for (int i = 0; i < Model.Item2.Count; i++)
                            {
                                @Html.HiddenFor(students => student.Marks[i].StudentId);
                                @Html.HiddenFor(students => student.Marks[i].CategoryId);
                                @Html.HiddenFor(students => student.Marks[i].Id);
                                <div style="width: 100%; display: inline-block">
                                    <div style="float: left; font-size: 12px; margin: 0 !important">@Model.Item2[i].Name:</div>
                                    @Html.EditorFor(thisStudent => student.Marks[i].Value, new { htmlAttributes = new { @class = "search-marks-input", @min="0", @max="100" } })
                                </div>
                            }
                                
                        </div>
                        <div class="iconConteiner">
                            <div class="centerConteiner">
                                <div class="deleteContainer" onclick="Delete($(this), '@student.Id')">
                                        <i class="large material-icons deleteGroup deleteStudent">delete</i>
                                </div>
                                <a class = "deleteContainer" href="@Url.RouteUrl("studentResult", new { id = student.Id, groupId = student.Id }, null)">
                                    <i class="large material-icons deleteGroup deleteStudent">system_update_alt</i>
                                </a>
                                <div class="deleteContainer" onclick="submitStudent(this, @numberForm);">
                                    <i class="large material-icons deleteGroup deleteStudent">done</i>
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="content-search front">
                        <div class="main-search">
                            <div style="    margin-bottom: 6px;">
                                @student.FirstName @student.LastName
                            </div>
                        </div>
                        @foreach(var group in Model.Item3)
                        {
                            if(group.Id == student.GroupId)
                            {
                                <p class="group-search">@group.ShortName</p>
                            }
                        }
                        <table class="result-table" style="margin-bottom: 13.5px;">
                            <thead>
                                <tr>
                                    @foreach (var category in Model.Item2)
                                    {
                                        <th>
                                            @category.Code
                                        </th>
                                    }
                                </tr>
                            </thead>
                            <tr>
                                    @for (int i = 0; i < student.Marks.Count; i++)
                                    {
                                        <td class="mark">
                                            @student.Marks[i].Value
                                        </td>
                                    }
                            </tr>
                        </table>
                       
                        <div class="iconConteiner">
                            <div class="centerConteiner">
                                @if (User.IsInRole("Filler")){
                                    <div class="deleteContainer" onclick="Delete($(this), '@student.Id')">
                                            <i class="large material-icons deleteGroup deleteStudent">delete</i>
                                    </div>
                                }
                                <a class = "deleteContainer" href="@Url.RouteUrl("studentResult", new { id = student.Id, groupId = student.Id }, null)">
                                    <i class="large material-icons deleteGroup deleteStudent">system_update_alt</i>
                                </a>
                                @if (User.IsInRole("Filler")){
                                    <div class="deleteContainer" onclick="swapCard(this)">
                                        <i class="large material-icons deleteGroup deleteStudent">assignment</i>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div id="dialog" title="Видалити" style="display: none;">
         <p>Повернути студентів групи після видалення буде неможливо. Ви дісно хочете видалити групу?</p>
    </div>
    @section Scripts
{
        <script src="http://code.jquery.com/jquery-migrate-1.2.1.js"></script>
    @Scripts.Render("~/Scripts/Search.js")
}